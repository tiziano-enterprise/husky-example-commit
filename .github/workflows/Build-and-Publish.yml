name: Docker Build and Publish

on:
  #push:
   # branches:
    #  - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run build script
        run: npm run build

  versioning:
    runs-on: ubuntu-latest
    needs: build

    outputs:
      NEW_TAG: ${{ steps.increment_version.outputs.NEW_TAG }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get the current tag on main
        id: get_tag
        run: |
          git fetch --tags
          CURRENT_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "Current tag: $CURRENT_TAG"
          if [ -z "$CURRENT_TAG" ]; then
            CURRENT_TAG="v0.0.0"
          fi
          echo "CURRENT_TAG=$CURRENT_TAG" >> $GITHUB_ENV

      - name: Increment version
        id: increment_version
        run: |
          TAG=${{ env.CURRENT_TAG }}
          VERSION=$(echo $TAG | sed 's/^v//')
          IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"
          echo "New tag: $NEW_TAG"
          echo "::set-output name=NEW_TAG::$NEW_TAG"

      - name: Create new tag
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git tag ${{ steps.increment_version.outputs.NEW_TAG }}
          git push https://${GH_TOKEN}@github.com/${{ github.repository }} ${{ steps.increment_version.outputs.NEW_TAG }}

  docker_build_and_publish:
    runs-on: ubuntu-latest
    needs: versioning

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          VERSION=${{ needs.versioning.outputs.NEW_TAG }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/fincantieri_fe:latest -t ${{ secrets.DOCKER_USERNAME }}/fincantieri_fe:$VERSION .
          docker push ${{ secrets.DOCKER_USERNAME }}/fincantieri_fe:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/fincantieri_fe:$VERSION
